import 'package:flutter_local_notifications/flutter_local_notifications.dart';

import '../navigation/app_router.dart';
import '../navigation/app_router.gr.dart';

class NotificationService {
  static final NotificationService _instance = NotificationService._internal();
  factory NotificationService() => _instance;
  NotificationService._internal();

  final FlutterLocalNotificationsPlugin _flutterLocalNotificationsPlugin =
      FlutterLocalNotificationsPlugin();

  AppRouter? _router;
  String? _pendingPayload;

  Future<void> init(AppRouter router) async {
    _router = router;
    print("üìå –ü–æ–ª—É—á–µ–Ω–Ω—ã–π AppRouter: ${_router?.hashCode}");

    if (_pendingPayload != null) {
      print("üöÄ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–π payload: $_pendingPayload");
      _handleNotificationClick(_pendingPayload);
      _pendingPayload = null;
    }

    const AndroidInitializationSettings androidSettings =
        AndroidInitializationSettings('@mipmap/ic_launcher');

    const InitializationSettings settings = InitializationSettings(
      android: androidSettings,
    );

    await _flutterLocalNotificationsPlugin.initialize(
      settings,
      onDidReceiveNotificationResponse: (NotificationResponse response) {
        print("üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–ª–∏–∫–Ω—É—Ç–æ: ${response.payload}");
        _handleNotificationClick(response.payload);
      },
      onDidReceiveBackgroundNotificationResponse: backgroundNotificationHandler,
    );

    final details = await _flutterLocalNotificationsPlugin
        .getNotificationAppLaunchDetails();
    if (details?.didNotificationLaunchApp ?? false) {
      print(
          "üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ —á–µ—Ä–µ–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ! Payload: ${details!.notificationResponse?.payload}");
      _handleNotificationClick(details.notificationResponse?.payload);
    }
  }

  void _handleNotificationClick(String? payload) {
    if (payload == null) {
      print("‚ùå Payload == null");
      return;
    }

    if (_router == null) {
      print("üîÑ –†–æ—É—Ç–µ—Ä –µ—â–µ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, —Å–æ—Ö—Ä–∞–Ω—è–µ–º payload: $payload");
      _pendingPayload = payload;
      return;
    }

    print("üìå –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω –¥–µ—Ç–∞–ª–∏ –Ω–æ–≤–æ—Å—Ç–∏ —Å ID: $payload");
    try {
      print("üìå –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–π —Å—Ç–µ–∫ –ø–µ—Ä–µ–¥ push: ${_router!.stack}");
      print("üìå –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–π —Å—Ç–µ–∫ –ø–µ—Ä–µ–¥ push: $_router");
      // if (_router!.navigatorKey.currentState?.mounted ?? false) {
      //   _router!.replace(NewsDetailRoute(newsId: payload));
      // } else {
      //   print("‚è≥ –ù–∞–≤–∏–≥–∞—Ü–∏—è –æ—Ç–ª–æ–∂–µ–Ω–∞, –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤–æ.");
      //   _pendingPayload = payload;
      // }
      // _router!.navigateNamed('/newsDetail/$payload');

      _router!.push(
        const NewsRoute(),
      );
      print("‚úÖ –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–π —Å—Ç–µ–∫ –ø–æ—Å–ª–µ push: ${_router!.stack}");
      print("‚úÖ –ù–∞–≤–∏–≥–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ AutoRouter");
    } catch (e) {
      print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ: $e");
    }
  }

  Future<void> showNotification({required String newsId}) async {
    const AndroidNotificationDetails androidDetails =
        AndroidNotificationDetails(
      'new_channel',
      'New Channel Notifications',
      importance: Importance.max,
      priority: Priority.high,
      playSound: true,
    );

    const NotificationDetails details =
        NotificationDetails(android: androidDetails);

    await _flutterLocalNotificationsPlugin.show(
      0,
      '–ù–æ–≤–∞—è –Ω–æ–≤–æ—Å—Ç—å!',
      '–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –¥–µ—Ç–∞–ª–∏ –Ω–æ–≤–æ—Å—Ç–∏.',
      details,
      payload: newsId,
    );
  }
}

@pragma('vm:entry-point')
void backgroundNotificationHandler(NotificationResponse response) {
  print("üõë –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–ª–∏–∫–Ω—É—Ç–æ –≤ —Ñ–æ–Ω–µ: ${response.payload}");
}
